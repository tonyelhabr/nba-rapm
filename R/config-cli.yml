default:

  # General parameters.
  verbose:
    default: true
    help: 'If `TRUE`, INFO messages are dispayed.
    (Other message types (WARNING and ERROR) are always shown.)'
  export:
    default: true
    help: 'If `TRUE`, always exports data to appropriate files.'
  backup:
    default: false
    help: 'If `TRUE`, backup files are created (for all files exported).
    By default, a timestamp is appended to the name of the backup file 
    to distinguish it from the most recent version.'
  clean:
    default: true
    help: 'If `TRUE`, "cleans" (or "keeps") up backup files (so that an endless number of files are not
    created over time).
    Keeps the most recent backups by default.
    Note that `backup`, `clean`, and `n_keep` can/should be
    used synchronously as an alternative to a generic `overwrite` option.'
  n_keep:
    default: 0
    help: 'Number of backup files to NOT delete when "clean"-ing backup files.
    (Not relevant if `clean = FALSE`.)'
  skip:
    default: false
    help: 'If `TRUE`, skips any step that can be skipped by checking that
    downstread dependencies of the step already exist. If they do not exist,
    then the step is not skipped.'
  overwrite:
    default: false
    help: 'If `TRUE`, then overwrites existing files. Used for some functions
    (instead of `backup`).'
    
  dir:
    default: 'C:/Users/aelhabr/Documents/projects/nba-rapm/R'
    help: 'Working directory. MUST exist. (Note that the user most certainly will need
    to change the default value, which is primarily specified for the convenience of the developer.'
  multi_core:
    default: true
    help: 'Whether to use multiple user computer cores.'
  n_core:
    default: 1
    help: 'Number of cores to use. Only relevant if `multi_core = TRUE`.
    (Requires `{parallel}` package, as well as `{doParallel}` package on Windows.)'
    
    
  # `clean`/`reshape` parameters
  season:
    default: 2017
    help: 'NBA season to process. Used as "suffix" for all path formats 
    (where it is subsituted in placed for the "sprintf"-style format "%04d").'
  season_type:
    default: 'regular'
    help: 'Valid choices include "regular". ("playoffs" and "all" have not been implemented).'
  poss_min:
    # default: 5000
    default: 1000
    help: 'Minimum number of poss in which a player must have 
    participated  (offense and defense combined) in order to qualify for model fitting process.
    (Model quality generally improves if players with less time played are removed
    from consideration because they can represent outliers and have high leverage on 
    the model fitting.)'
  gp_min:
    # default: 25
    default: 0
    help: 'Analogous to `poss_min` for games played.'
  mp_min:
    # default: 250
    default: 0
    help: 'Analogous to `poss_min` for minutes played.'
  scale:
    default: false
    help: 'If `TRUE`, scales dummy/indicator variables (by number of posss).'
  collapse:
    default: true
    help: 'If `TRUE`, "collapses" plays into stints.'

   
   # `fit` parameters
  intercept:
    default: true
    help: 'If `TRUE`, includes intercept term.'
  optimize:
    default: false
    # default: true
    help: 'If `TRUE`, then calculates the "optimal" regularized
    "lambda" penalties for the offensive at run-time (via `{glment}`"s default cross validation procedure.
    Note that setting this value to `FALSE` (and using the default `lambda_optm_o` value),
    reduces run-time execution.'
  seed:
    default: 42
    help: 'Seed to use for regression cross-validation.'
  lambda_o:
    # default: 100
    default: 100
    help: 'Value to use for lambda in model fit if `optimize = FALSE`.'
  lambda_d:
    # default: 250
    default: 350
    help: 'Analogous to `lambda_o`.'

production:
